


1. Load Required Packages and Data

```{r}
# Clear environment
rm(list = ls())

# Load necessary libraries
library(tidyverse)
library(DESeq2)
library(ggforce)
library(RColorBrewer)
library(vsn)
library(enrichR)
library(gridExtra)

# Load DESeq2 object
mir_DeSeq2 <- readRDS("~/miR-2954/datasets/RNA-seq/mir-2954_DeSeq2_object_long_RNA_ranged.rds")

# Display sample metadata
colData(mir_DeSeq2)

# Load annotated GTF file with miR-2954 target sites
chick_gtf <- readRDS("~/miR-2954/mir_2954_target_prediction/GRCg7b_gtf_all_target_sites_integrated.rds")

# Display first few rows
head(chick_gtf)

```


2. Categorizing Z-Linked Genes
```{r}
# Categorize genes as Z-linked or autosomal
chick_gtf <- chick_gtf %>%
  mutate(
     chr_z_or_auto = factor(str_replace(chr_z_or_auto, "-","_")), 
     mir_targets_6_8 = factor(mir_targets_6_8),
     mir_target_group = factor(paste0(chr_z_or_auto,"_", mir_targets_6_8))
    )

# Extract Z-linked target gene list
Z_linked_target_list <- chick_gtf %>%  
  filter(mir_targets_6_8 == "target" & chr_z_or_auto == "Z_linked") %>%
  pull(gene_id)

# Extract all Z-linked genes
Z_linked_list <- chick_gtf %>%
  filter(chr_z_or_auto == "Z_linked") %>%
  pull(gene_id)

# Subset DESeq2 object for Z-linked target genes
Z_target_mir_DeSeq2 <- mir_DeSeq2[row.names(mir_DeSeq2) %in% Z_linked_target_list,]

# Subset DESeq2 object for all Z-linked genes
Z_mir_DeSeq2 <- mir_DeSeq2[row.names(mir_DeSeq2) %in% Z_linked_list,]

```

3. Select Samples Based on Experimental Conditions
```{r}
# Function to subset DESeq2 data based on age, sex, tissue, and genotype
select_samples <- function(data, age, sex, tissue, breed = c("HL","F1"), genotype = c("WT","HZ","KO")) {
  subset_data <- data[, colData(data)$embryonic_age %in% age & 
                         colData(data)$sex %in% sex & 
                         colData(data)$tissue %in% tissue & 
                         colData(data)$breed %in% breed & 
                         colData(data)$genotype %in% genotype]
  
  subset_data$tissue <- droplevels(subset_data$tissue)
  subset_data$embryonic_age <- droplevels(subset_data$embryonic_age)
  subset_data$genotype <- droplevels(subset_data$genotype)
  subset_data$breed <- droplevels(subset_data$breed)
  subset_data$sex <- droplevels(subset_data$sex)
  
  return(subset_data)
}

```

4. Run DESeq2 Analysis
```{r}
# Function to perform DESeq2 analysis
run_DESeq2 <- function(dseq_data, formula_design, contrast_values) {
  design_formula <- as.formula(formula_design)
  design(dseq_data) <- design_formula
  dseq_data <- DESeq(dseq_data)
  
  # Create results table based on contrast values
  res <- results(dseq_data, contrast = contrast_values)
  
  return(res)
}

```

5. Update Result Table with miR-2954 Target Info
```{r}
# Function to integrate GTF annotations into DESeq2 results
update_res_table <- function(res_table, chick_gtf) {
  res_table <- res_table %>%
    as.data.frame() %>% 
    rownames_to_column("gene_id") %>% 
    left_join(select(chick_gtf, gene_id, gene_name, mir_target_group, chr_z_or_auto, mir_targets_6_8), by = "gene_id") %>%
    mutate(significant_genes = ifelse(is.na(padj) | padj > 0.05, "not_significant", "significant"))
  
  return(res_table)
}

```
6. Full Workflow for DE Analysis

```{r}
# Function to run DESeq2, update results, and return cleaned table
analyze_samples_age_cov <- function(data, age, sex, tissue, formula_design, contrast_values) {
  selected_data <- select_samples(data, age, sex, tissue)
  res_table <- run_DESeq2(selected_data, formula_design, contrast_values)
  updated_res_table <- update_res_table(res_table, chick_gtf)
  
  return(updated_res_table)
} 

```

7. Run DE Analysis for Protein-Coding Genes
```{r}
# Subset protein-coding genes from GTF
protein_coding_gene_list <- chick_gtf %>%
  filter(gene_biotype == "protein_coding") %>%
  pull(gene_id)

# Subset DESeq2 object for protein-coding genes
protein_coding_DeSeq2 <- mir_DeSeq2[row.names(mir_DeSeq2) %in% protein_coding_gene_list,]

# Run DESeq2 for male embryos (E3 & E5)
age <- c(3, 5)
sex <- "Male"
formula_design <- "~ genotype + embryonic_age"
contrast_values <- c("genotype", "KO", "WT")

result_head <- analyze_samples_age_cov(protein_coding_DeSeq2, age, sex, "Head", formula_design, contrast_values)
result_body <- analyze_samples_age_cov(protein_coding_DeSeq2, age, sex, "Body", formula_design, contrast_values)
result_heart <- analyze_samples_age_cov(protein_coding_DeSeq2, age, sex, "Heart", formula_design, contrast_values)

# Run DESeq2 for whole male embryo (E2)
age <- c(2)
sex <- "Male"
formula_design <- "~ genotype"
contrast_values <- c("genotype", "KO", "WT")

result_whole <- analyze_samples_age_cov(protein_coding_DeSeq2, age, sex, "Whole", formula_design, contrast_values)

# Run DESeq2 for whole female embryo (E2)
female_F1_data <- protein_coding_DeSeq2[, colData(protein_coding_DeSeq2)$breed == "F1" & colData(protein_coding_DeSeq2)$sex == "Female"]
result_whole_female <- analyze_samples_age_cov(female_F1_data, age, "Female", "Whole", formula_design, contrast_values)

```

8. Save Results for Supplementary Information

```{r}
write_csv(result_whole_female, "~/miR-2954/Supplementary_information/DE_KO_vs_WT_Female_Whole_E2.csv") 
write_csv(result_whole, "~/miR-2954/Supplementary_information/DE_KO_vs_WT_Male_Whole_E2.csv") 
write_csv(result_head, "~/miR-2954/Supplementary_information/DE_KO_vs_WT_Male_Head_E3_E5.csv") 
write_csv(result_heart, "~/miR-2954/Supplementary_information/DE_KO_vs_WT_Male_Heart_E3_E5.csv") 
write_csv(result_body, "~/miR-2954/Supplementary_information/DE_KO_vs_WT_Male_Body_E3_E5.csv")

```



















