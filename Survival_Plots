
#1. Load Required Packages and Data

```{r}

# Load necessary libraries
library(tidyverse)
library(ggtext)
library(ggplot2)
library(ggbeeswarm)
library(survival)
library(survminer)

# Load genotype-phenotype dataset
mir_geno_pheno <- read_rds("/home/amir/miR-2954/datasets/MiR-2954_genotype_phenotype_data_tidy.rds")

# Display first few rows
head(mir_geno_pheno)

```

2. Data Preprocessing and Recoding

```{r}
# Recode categorical variables and create new features
pheno_data <- mir_geno_pheno %>%
  mutate(
    genotype = recode(genotype, "het" = "HZ", "hz" = "HZ", "hom" = "KO", "wt" = "WT"),
    breed = recode(breed, "hl" = "HL", "F1" = "G2"),
    sex = recode(sex, "m" = "Male", "f" = "Female"),
    phenotype = str_to_title(phenotype), # Capitalize first letter
    sex_genotype = paste0(sex, "_", genotype),
    age_group = recode(embryonic_age, "2" = "E2", "3" = "E3", "4" = "E4", "5" = "E5", "7" = "E7", "13" = "E13"),
    age_merged = recode(embryonic_age, "2" = "E2", "3" = "E3", "4" = "E4-5", "5" = "E4-5", "7" = "E7-13", "13" = "E7-13"),
    phenotype_2 = if_else(phenotype == "Alive", 0, 1),
    HH_stage = as.numeric(HH_stage),
    geno_breed = as.factor(paste0(breed, "_", genotype)),
    geno_sex_breed = as.factor(paste0(breed, "_", sex, "_", genotype))
  ) %>%
  mutate_at(vars(age_group, sex_genotype, genotype, geno_breed), as.factor)

# Set factor levels for categorical variables
pheno_data$age_group <- factor(pheno_data$age_group, levels = c("E2", "E3", "E4", "E5", "E7", "E13"))
pheno_data$sex_genotype <- factor(pheno_data$sex_genotype, levels = c("Female_WT", "Female_KO", "Male_WT", "Male_HZ", "Male_KO"))
pheno_data$genotype <- factor(pheno_data$genotype, levels = c("WT", "HZ", "KO"))
pheno_data$geno_breed <- factor(pheno_data$geno_breed, levels = c("HL_WT", "G2_WT", "G2_HZ", "G2_KO"))
pheno_data$geno_sex_breed <- factor(pheno_data$geno_sex_breed, levels = c("HL_Female_WT","G2_Female_WT", "G2_Female_KO" ,"HL_Male_WT","G2_Male_HZ","G2_Male_KO"))

# Save cleaned dataset
saveRDS(pheno_data, "/home/amir/miR-2954/datasets/MiR-2954_genotype_phenotype_data_tidy.rds")

```

3. Set Up Custom Themes

```{r}
# Custom theme for survival analysis plots
mir_survival_theme <- theme(
  strip.background = element_blank(),
  strip.text = element_text(size = 5, margin = margin(t = 1, r = 0, b = 1, l = 0)),
  plot.background = element_rect(fill = "transparent", color = NA),
  text = element_text(size = 5),
  axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
  axis.text = element_text(size = 5, color = "black"),
  axis.title = element_text(size = 5, color = "black"),
  axis.line = element_line(color = "black", size = 0.3),
  legend.position = "right",
  legend.title = element_blank(),
  legend.text = element_text(size = 5, color = "black")
)

```

4. Survival Analysis Plot
```{r}
# Filter for specific genotype and age groups
F1_pheno <- pheno_data %>% filter(breed == "G2" & age_merged %in% c("E3", "E4-5", "E7-13"))

# Count survival proportion
count_data <- F1_pheno %>%
  group_by(age_merged, sex_genotype, phenotype) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))

# Generate survival bar plot
survival_bar_plot <- ggplot(data = count_data, aes(x = as.factor(age_merged))) +
  geom_bar(aes(y = prop, fill = phenotype), position = "fill", stat = "identity", color = "black", size = 0.1) +
  scale_fill_manual(values = c("Dead" = "#6664AB", "Alive" = "#DCE9F8"), name = "") +
  theme_classic() +
  facet_wrap(~sex_genotype, ncol = 4) +
  xlab("Embryonic Age") +
  ylab("Proportion") +
  mir_survival_theme +
  scale_y_continuous(limits = c(0, 1.1))

# Save plot
ggsave(
  plot = survival_bar_plot,
  filename = "/home/amir/miR-2954/plots/Proportion_of_survived_embryos_G1.pdf",
  device = "pdf",
  width = 7,
  height = 3,
  units = "cm",
  dpi = 300,
  bg = "transparent",
  useDingbats = FALSE
)

```

5. Survival Analysis
```{r}
# Prepare dataset for survival analysis
F1_pheno_KO <- F1_pheno %>% filter(sex_genotype == "Male_KO" & embryonic_age %in%  c(3,5,7,13))

# Kaplan-Meier survival fit
chick_surv_fit <- survfit(Surv(time = embryonic_age, event = phenotype_2) ~ sex_genotype, data = F1_pheno_KO)

# Plot survival curve
ggsurvplot(chick_surv_fit,
           data = F1_pheno,
           xlim = c(0,14),
           xlab = "Incubation day",
           ylab = "Survival %",
           pval = TRUE, 
           legend.title = "Genotype_sex",
           censor = FALSE)

```
